/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StandingsRecordsInner {
    #[serde(rename = "standingsType", skip_serializing_if = "Option::is_none")]
    pub standings_type: Option<StandingsType>,
    #[serde(rename = "league", skip_serializing_if = "Option::is_none")]
    pub league: Option<Box<crate::models::StandingsRecordsInnerLeague>>,
    #[serde(rename = "division", skip_serializing_if = "Option::is_none")]
    pub division: Option<Box<crate::models::StandingsRecordsInnerDivision>>,
    #[serde(rename = "conference", skip_serializing_if = "Option::is_none")]
    pub conference: Option<Box<crate::models::DivisionConference>>,
    #[serde(rename = "teamRecords", skip_serializing_if = "Option::is_none")]
    pub team_records: Option<Vec<crate::models::StandingsRecordsInnerTeamRecordsInner>>,
}

impl StandingsRecordsInner {
    pub fn new() -> StandingsRecordsInner {
        StandingsRecordsInner {
            standings_type: None,
            league: None,
            division: None,
            conference: None,
            team_records: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StandingsType {
    #[serde(rename = "regularSeason")]
    RegularSeason,
}

impl Default for StandingsType {
    fn default() -> StandingsType {
        Self::RegularSeason
    }
}

