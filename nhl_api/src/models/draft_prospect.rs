/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DraftProspect {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<f32>,
    #[serde(rename = "fullName", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "birthDate", skip_serializing_if = "Option::is_none")]
    pub birth_date: Option<String>,
    #[serde(rename = "birthCity", skip_serializing_if = "Option::is_none")]
    pub birth_city: Option<String>,
    #[serde(rename = "birthCountry", skip_serializing_if = "Option::is_none")]
    pub birth_country: Option<String>,
    #[serde(rename = "nationality", skip_serializing_if = "Option::is_none")]
    pub nationality: Option<String>,
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<String>,
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<f32>,
    #[serde(rename = "shootsCatches", skip_serializing_if = "Option::is_none")]
    pub shoots_catches: Option<String>,
    #[serde(rename = "primaryPosition", skip_serializing_if = "Option::is_none")]
    pub primary_position: Option<Box<crate::models::DraftProspectPrimaryPosition>>,
    #[serde(rename = "prospectCategory", skip_serializing_if = "Option::is_none")]
    pub prospect_category: Option<Box<crate::models::DraftProspectProspectCategory>>,
    #[serde(rename = "amateurTeam", skip_serializing_if = "Option::is_none")]
    pub amateur_team: Option<Box<crate::models::DraftProspectAmateurTeam>>,
    #[serde(rename = "amateurLeague", skip_serializing_if = "Option::is_none")]
    pub amateur_league: Option<Box<crate::models::DraftProspectAmateurLeague>>,
    #[serde(rename = "ranks", skip_serializing_if = "Option::is_none")]
    pub ranks: Option<serde_json::Value>,
}

impl DraftProspect {
    pub fn new() -> DraftProspect {
        DraftProspect {
            id: None,
            full_name: None,
            link: None,
            first_name: None,
            last_name: None,
            birth_date: None,
            birth_city: None,
            birth_country: None,
            nationality: None,
            height: None,
            weight: None,
            shoots_catches: None,
            primary_position: None,
            prospect_category: None,
            amateur_team: None,
            amateur_league: None,
            ranks: None,
        }
    }
}


