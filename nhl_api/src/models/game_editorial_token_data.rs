/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GameEditorialTokenData {
    #[serde(rename = "tokenGUID", skip_serializing_if = "Option::is_none")]
    pub token_guid: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "teamId", skip_serializing_if = "Option::is_none")]
    pub team_id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "seoName", skip_serializing_if = "Option::is_none")]
    pub seo_name: Option<String>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "hrefMobile", skip_serializing_if = "Option::is_none")]
    pub href_mobile: Option<String>,
}

impl GameEditorialTokenData {
    pub fn new() -> GameEditorialTokenData {
        GameEditorialTokenData {
            token_guid: None,
            r#type: None,
            id: None,
            team_id: None,
            name: None,
            seo_name: None,
            href: None,
            href_mobile: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "hyperLink")]
    HyperLink,
    #[serde(rename = "playerCard")]
    PlayerCard,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::HyperLink
    }
}

